..  _types-properties-columnsOverrides:

..  confval:: columnsOverrides
    :name: types-columnsOverrides
    :Path: $GLOBALS['TCA'][$table]['types'][$type]
    :type: array (columns fields overrides)
    :Scope: Display
    :Examples: :ref:`Examples for columnsOverrides <types-examples-columnsOverrides>`

    Changed or added ['columns'] field display definitions.

    This allows to change the column definition of a field if a record of this type is edited. Currently, it only
    affects the display of form fields, but not the data handling.

    A typical property that can be changed here is :code:`renderType`.

    The core uses this property to override for instance the "bodytext" field config of table "tt_content": If a record
    of type "text" is edited, it adds "enableRichtext = 1" to trigger an RTE to the default "bodytext" configuration,
    and if a type "table" is edited, it adds "renderType = textTable" and "wrap = off" to "bodytext".

    The FormEngine basically merges "columnsOverrides" over the default "columns" field after the record type
    has been determined.

    ..  attention::
        It is not possible to override any properties in "Proc." scope: The DataHandler does not take "columnsOverrides"
        into account. Only pure "Display" related properties can be overridden. This especially means that
        columns config 'type' must **not** be set to a different value.
