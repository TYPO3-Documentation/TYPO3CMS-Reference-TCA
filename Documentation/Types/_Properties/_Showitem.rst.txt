..  _types-properties-showitem:

..  confval:: showitem
    :name: types-showitem
    :Path: $GLOBALS['TCA'][$table]['types'][$type]['showitem']
    :Required: true
    :type: string (list of field configuration sets)
    :Examples: :ref:`types-example-showitem`

    Configuration of the displayed order of fields in FormEngine and their tab alignment.

    The whole string is a comma `,` separated list of tokens. Each token can have keywords separated by
    semicolon `;`.

    Each comma separated token is one of the following:

    ``fieldName;fieldLabel``
        Name of a field to show. Optionally an alternative label (string or LLL reference) to override
        the :ref:`default label from columns section <columns-properties-label>`.

    ``--palette--;paletteLabel;paletteName``
        Name of a :ref:`palette <palettes>` to show. The label (string or LLL reference) is optional. If set, it is
        shown above the single palette fields. The palette name is required and must reference a palette from
        the palette section.

        ..  code-block:: php

            --palette--;;caching // Show palette "caching" without additional label
            --palette--;Caching;caching // Show palette "caching" with label "Caching"

    ``--div--;tabLabel``
        Put all fields after this token onto a new tab and name the tab as given in "tabLabel" (string or LLL reference).

    ..  note::
        It is good practice to add a comma in excess behind the very last field name
        as shown in the examples above. The FormEngine code will ignore this, but it
        helps developers to not forget about a comma when additional fields are
        added, which can suppress an annoying "Why is my new field not
        displayed?" bug hunt.
